{
  "common": {
    "required": "required",
    "close": "Close",
    "save": "Save",
    "yes": "Yes",
    "no": "No",
    "table": {
      "all": "All",
      "itemsPerPage": "Items per page:"
    }
  },
  "login": {
    "login": "Login",
    "username": "username",
    "passphrase": "passphrase",
    "error": "invalid credentials"
  },
  "menu": {
    "server": "Server",
    "networks": "Networks",
    "clients": "Clients",
    "settings": "Settings",
    "logout": "Logout"
  },
  "system": {
    "system": "System",
    "interfaces": "Network Interfaces",
    "cpu": "CPU",
    "memory": "Memory",
    "swap": "Swap",
    "storage": "Storage",
    "loadavg": "Load Average",
    "1minute": "1m",
    "5minutes": "5m",
    "15minutes": "15m",
    "available": "Available",
    "total": "Total",
    "used": "Used"
  },
  "account": {
    "account": "Account",
    "changePassphrase": "Change Passphrase",
    "updated": {
      "success": "Account settings updated successfully!",
      "error": "Failed to update account settings."
    },
    "changed": {
      "success": "Passphrase changed successfully!",
      "error": "Failed to change passphrase."
    },
    "passphrase": {
      "passphrase": "passphrase",
      "current": "current passphrase",
      "new": "New passphrase",
      "confirm": "Confirm new passphrase",
      "enter": "Enter current passphrase",
      "validation": "Passphrase must contain at least: \n* 1 number\n* 2 special characters,\n* 1 lowercase,\n* 1 uppercase\n* be greater than 8 chracters in length",
      "mustmatch": "Passphrases do not match."
    },
    "bcrypt": {
      "label": "key expansion rounds",
      "info": "Number of bcrypt rounds to use when hashing passphrase.",
      "title": "Salt Rounds (bcrypt)"
    },
    "attempts": {
      "label": "max. attempts",
      "info": "Maximum number of failed login attempts before initiating account lockdown.",
      "title": "Max. Login Attempts"
    },
    "locktime": {
      "label": "locktime (s)",
      "info": "Time (in seconds) to lock account if max. attempts is triggered.",
      "title": "Account Lock Time"
    },
    "locale": {
      "label": "language",
      "info": "Select language (override browser language)",
      "title": "Language"
    },
    "username": {
      "label": "username",
      "minlen": "Username must be at least 4 characters in length and only contain lowercase (a-z)."
    }
  },
  "networks": {
    "mainnet": "Mainnet",
    "testnet": "Testnet",
    "name": "network",
    "engine": "consensus engine",
    "networkId": "networkId",
    "chainId": "chainId",
    "explorer": "block explorer",
    "stats": "network stats",
    "clients": "supported clients"
  },
  "clients": {
    "title": "Clients",
    "releases": "Releases",
    "available": "release available | releases available"
  },
  "server": {
    "instances": "Instances",
    "name": "name",
    "network": "network",
    "client": "client",
    "version": "version",
    "status": "status",
    "uptime": "uptime",
    "stoppedAt": "stopped at",
    "stopped": "stopped",
    "starting": "starting",
    "running": "running",
    "stopping": "stopping",
    "creating": "creating",
    "error": "error",
    "details": "Details",
    "day": "day | days",
    "noResults": "Create an instance with the + button above.."
  },
  "create": {
    "title": "Create",
    "selectNetwork": "Select a network",
    "selectClient": "Select a client",
    "mainnet": "MAINNET",
    "testnet": "TESTNET",
    "showTestnets": "show testnets"
  },
  "logs": {
    "title": "Logs",
    "stdout": "stdout",
    "stderr": "stderr"
  },
  "controls": {
    "start": "Start",
    "stop": "Stop"
  },
  "destroy": {
    "title": "Destroy",
    "question": "Are you sure you want to destroy {n}?",
    "confirmation": "Enter '{n}' to confirm.",
    "confirm": "confirm",
    "rmDatadir": "Remove datadir?"
  },
  "download": {
    "downloading": "Downloading...",
    "complete": "Download complete"
  },
  "geth": {
    "dashboard": {
      "title": "Dashboard",
      "network": "Network",
      "testnet": "testnet",
      "mainnet": "mainnet",
      "connections": "Connections",
      "peers": "{n} peer | {n} peers",
      "countries": "in {n} country | spanning {n} countries",
      "country": "Country",
      "client": "Client",
      "version": "Version",
      "tag": "Tag",
      "build": "Build",
      "os": "OS",
      "arch": "Arch",
      "peersPerPage": "Peers per page:",
      "difficulty": "Difficulty",
      "blocktime": "Blocktime",
      "activity": "Activity",
      "esthashrate": "est.",
      "lastBlock": "Last Block",
      "ago": "{n}s ago",
      "previous": "prev. {n}s",
      "bestBlock": "Best Block",
      "hash": "Hash",
      "from": "From",
      "to": "To",
      "value": "Value",
      "gas": "Gas",
      "gasPrice": "Gas Price",
      "maxFee": "Max. Fee",
      "txnsPerPage": "Txns per page:",
      "noPending": "No pending transactions",
      "averageBlocks": "Average - {n} blocks: ",
      "hashrate": "Hashrate: {n}/s",
      "txnCount": "Txns: {n}",
      "gasUsed": "Gas Used: {n}",
      "gasLimit": "Gas Limit: {n}",
      "size": "Size: {n}",
      "syncingFrom": "syncing from #{n}",
      "syncingCurrent": "{current} of {highest}",
      "syncingMessage": "block info will load once syncing is complete",
      "noPeersMessage": "waiting for connections"
    },
    "overview": {
      "title": "Overview",
      "details": "Details",
      "name": "name",
      "id": "id",
      "network": "network",
      "client": "client",
      "binpath": "binpath",
      "datadir": "datadir",
      "created": "created",
      "supervisor": "Supervisor",
      "state": "state",
      "uptime": "uptime",
      "stoppedAt": "stopped at",
      "pid": "pid",
      "exitStatus": "exit status",
      "group": "group",
      "stderr": "stderr",
      "stdout": "stdout"
    },
    "settings": {
      "title": "Settings",
      "configure": "Configure your client",
      "showAdvanced": "show advanced",
      "downloads": "Go to client downloads..",
      "name": {
        "title": "Instance Name",
        "info": "Name for this instance"
      },
      "datadir": {
        "title": "Data Directory",
        "info": "Data directory for the databases and keystore"
      },
      "fullSync": {
        "title": "Full Sync",
        "info": "Perform full validation on blockchain data"
      },
      "archive": {
        "title": "Archive",
        "info": "Set blockchain garbage collection mode to 'archive'"
      },
      "port": {
        "title": "Port",
        "info": "Network listening port"
      },
      "maxPeers": {
        "title": "Max. Peers",
        "info": "Maximum number of network peers (network disabled if set to 0)"
      },
      "nat": {
        "title": "NAT",
        "info": "NAT port mapping mechanism"
      },
      "noDiscover": {
        "title": "Nodiscover",
        "info": "Disables the peer discovery mechanism (manual peer addition)"
      },
      "ethstats": {
        "title": "Ethstats",
        "info": "Relay node statistics",
        "label": "nodename:secret@host"
      },
      "http": {
        "title": "HTTP-RPC",
        "info": "Enable the HTTP-RPC server",
        "address": {
          "title": "ADDRESS",
          "info": "HTTP-RPC server listening interface"
        },
        "port": {
          "title": "PORT",
          "info": "HTTP-RPC server listening port"
        },
        "corsdomain": {
          "title": "CORS DOMAIN",
          "info": "Comma separated list of domains from which to accept cross origin requests (browser enforced)"
        },
        "vhosts": {
          "title": "VHOSTS",
          "info": "Comma separated list of virtual hostnames from which to accept requests (server enforced)"
        },
        "apis": {
          "title": "API's",
          "info": "API's offered over the HTTP-RPC interface"
        }
      },
      "ws": {
        "title": "WS-RPC",
        "info": "Enable the WS-RPC server",
        "address": {
          "title": "ADDRESS",
          "info": "WS-RPC server listening interface"
        },
        "port": {
          "title": "PORT",
          "info": "WS-RPC server listening port"
        },
        "origins": {
          "title": "ORIGINS",
          "info": "Origins from which to accept websockets requests"
        },
        "apis": {
          "title": "API's",
          "info": "API's offered over the WS-RPC interface"
        }
      },
      "graphql": {
        "title": "GraphQL",
        "info": "Enable the GraphQL server",
        "address": {
          "title": "ADDRESS",
          "info": "GraphQL server listening interface"
        },
        "port": {
          "title": "PORT",
          "info": "GraphQL server listening port"
        },
        "corsdomain": {
          "title": "CORS DOMAIN",
          "info": "Comma separated list of domains from which to accept cross origin requests (browser enforced)"
        },
        "vhosts": {
          "title": "VHOSTS",
          "info": "Comma separated list of virtual hostnames from which to accept requests (server enforced)"
        }
      }
    }
  }
}
